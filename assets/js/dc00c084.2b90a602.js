"use strict";(self.webpackChunkbee_docs=self.webpackChunkbee_docs||[]).push([[9240],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),s=l(n),b=o,h=s["".concat(c,".").concat(b)]||s[b]||d[b]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=b;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[s]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},7934:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return s}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],p={title:"Debug API",id:"debug-api"},c=void 0,l={unversionedId:"bee/working-with-bee/debug-api",id:"bee/working-with-bee/debug-api",title:"Debug API",description:"Now that you have created your Swarm wallet and your Bee node has",source:"@site/docs/bee/working-with-bee/debug-api.md",sourceDirName:"bee/working-with-bee",slug:"/bee/working-with-bee/debug-api",permalink:"/docs/bee/working-with-bee/debug-api",draft:!1,editUrl:"https://github.com/ethersphere/docs.github.io/blob/master/docs/bee/working-with-bee/debug-api.md",tags:[],version:"current",frontMatter:{title:"Debug API",id:"debug-api"},sidebar:"bee",previous:{title:"Configuration",permalink:"/docs/bee/working-with-bee/configuration"},next:{title:"Logs and Files",permalink:"/docs/bee/working-with-bee/logs-and-files"}},u={},s=[{value:"Checking Connectivity",id:"checking-connectivity",level:4},{value:"Inspect Network Topology",id:"inspect-network-topology",level:4}],d={toc:s},b="wrapper";function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(b,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Now that you have created your Swarm wallet and your Bee node has\nbegun to participate in the global Swarm network, we can use the Debug\nAPI to take a closer look at what's happening with your node."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/"},"Debug API")," provides a privileged environment where you are able to interact with your Bee node to get more information about the status of your node."),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"Never expose your Debug API to the public Internet, make sure to use a\nfirewall or bind to ",(0,a.kt)("em",{parentName:"p"},"localhost"),", as we have in the example below.")),(0,a.kt)("p",null,"To use the Debug API we must first configure Bee to enable it, as it is disabled by default."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"bee start --debug-api-enable --debug-api-addr=localhost:1635\n")),(0,a.kt)("h4",{id:"checking-connectivity"},"Checking Connectivity"),(0,a.kt)("p",null,"First, let's check how many nodes we are currently connected to."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -s http://localhost:1635/peers | jq '.peers | length'\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"23\n")),(0,a.kt)("p",null,"Great! We can see that we are currently connected and sharing data with 23 other nodes!"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Here we are using the ",(0,a.kt)("inlineCode",{parentName:"p"},"jq")," command line utility to count the amount of objects in the ",(0,a.kt)("inlineCode",{parentName:"p"},"peers")," array in the JSON response we have received from our Debug API, learn more about how to install and use ",(0,a.kt)("inlineCode",{parentName:"p"},"jq")," ",(0,a.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq/"},"here"),".")),(0,a.kt)("h4",{id:"inspect-network-topology"},"Inspect Network Topology"),(0,a.kt)("p",null,"We can gain even more insight into how your Bee is becoming a part of\nthe global network using the ",(0,a.kt)("inlineCode",{parentName:"p"},"topology")," endpoint."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:1635/topology | jq\n")),(0,a.kt)("p",null,"In this example, our node is beginning to form a healthy network. We hope to see our node adding and\nconnecting to nodes in as many bins as possible. Learn more about proximity order bins and how your\nBee node becomes part of the ordered p2p network in"),(0,a.kt)("a",{href:"/the-book-of-swarm.pdf",target:"_blank",rel:"noopener noreferrer"},"The Book of Swarm")," .",(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "baseAddr": "793cdae71d51b0ffc09fecd1c5b063560150cf2e1d55058bad4a659be5894ab1",\n  "population": 159,\n  "connected": 19,\n  "timestamp": "2020-08-27T19:24:16.451187+01:00",\n  "nnLowWatermark": 2,\n  "depth": 4,\n  "bins": {\n    "bin_0": {\n      "population": 77,\n      "connected": 4,\n      "...": "..."\n    },\n    "bin_1": {\n        "population": 37,\n        "connected": 4,\n        }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"Find out more about what you can do with the Debug API ",(0,a.kt)("a",{parentName:"p",href:"/docs/api-reference/"},"here"),"."))}h.isMDXComponent=!0}}]);