"use strict";(self.webpackChunkbee_docs=self.webpackChunkbee_docs||[]).push([[3392],{79332:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var t=n(17624),s=n(4552);const i={title:"Troubleshooting",id:"troubleshooting"},r="Introduction",c={id:"bee/working-with-bee/troubleshooting",title:"Troubleshooting",description:"Under construction - this troubleshooting guide is in the process of being developed, check back again for more information later",source:"@site/docs/bee/working-with-bee/troubleshooting.md",sourceDirName:"bee/working-with-bee",slug:"/bee/working-with-bee/troubleshooting",permalink:"/docs/bee/working-with-bee/troubleshooting",draft:!1,unlisted:!1,editUrl:"https://github.com/ethersphere/docs.github.io/blob/master/docs/bee/working-with-bee/troubleshooting.md",tags:[],version:"current",frontMatter:{title:"Troubleshooting",id:"troubleshooting"},sidebar:"bee",previous:{title:"Light Nodes",permalink:"/docs/bee/working-with-bee/light-nodes"},next:{title:"Ultra Light Nodes",permalink:"/docs/bee/working-with-bee/ultra-light-nodes"}},a={},d=[{value:"Node occupies unusually large space on disk",id:"node-occupies-unusually-large-space-on-disk",level:2}];function l(e){const o={code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:(0,t.jsx)(o.em,{children:"Under construction - this troubleshooting guide is in the process of being developed, check back again for more information later"})}),"\n",(0,t.jsx)(o.h1,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(o.p,{children:"In this section we cover commonly seen problems encountered during the operation of a Bee node, and give an overview of suggested solutions"}),"\n",(0,t.jsx)(o.h2,{id:"node-occupies-unusually-large-space-on-disk",children:"Node occupies unusually large space on disk"}),"\n",(0,t.jsxs)(o.p,{children:["During normal operation of a Bee node, it should not take up more than ~30 GB of disk space. In the rare cases when the node's occupied disk space grows larger, you may need to use the compaction ",(0,t.jsx)(o.code,{children:"db compact"})," command."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-danger",children:"To prevent any data loss, operators should run the compaction on a copy of the localstore directory and, if successful, replace the original localstore with the compacted copy. \n"})}),"\n",(0,t.jsx)(o.p,{children:"The command is available as a sub-command under db as such:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"bee db compact --data-dir=\n"})})]})}function u(e={}){const{wrapper:o}={...(0,s.M)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},4552:(e,o,n)=>{n.d(o,{I:()=>c,M:()=>r});var t=n(11504);const s={},i=t.createContext(s);function r(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);