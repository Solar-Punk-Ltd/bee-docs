"use strict";(self.webpackChunkbee_docs=self.webpackChunkbee_docs||[]).push([[3859],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return b}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=c(n),f=a,b=s["".concat(u,".").concat(f)]||s[f]||d[f]||o;return n?r.createElement(b,i(i({ref:t},l),{},{components:n})):r.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p[s]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},17607:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return s}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],p={title:"API and Debug API",id:"api-reference"},u=void 0,c={unversionedId:"api-reference/api-reference",id:"api-reference/api-reference",title:"API and Debug API",description:"The Bee node exposes two HTTP API endpoints, the API and the Debug API. These endpoints are the primary interfaces to a running Bee node. API-endpoints can be queried using familiar HTTP requests, and will respond with a semantically accurate HTTP status and error codes as well as data payloads in JSON format where appropriate.",source:"@site/docs/api-reference/api-reference.md",sourceDirName:"api-reference",slug:"/api-reference/",permalink:"/docs/api-reference/",draft:!1,editUrl:"https://github.com/ethersphere/docs.github.io/blob/master/docs/api-reference/api-reference.md",tags:[],version:"current",frontMatter:{title:"API and Debug API",id:"api-reference"},sidebar:"docs"},l={},s=[{value:"API",id:"api",level:2},{value:"API Reference",id:"api-reference",level:3},{value:"Debug API",id:"debug-api",level:2},{value:"Debug API Reference",id:"debug-api-reference",level:3}],d={toc:s},f="wrapper";function b(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(f,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Bee node exposes two HTTP API endpoints, the ",(0,o.kt)("inlineCode",{parentName:"p"},"API")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"Debug API"),". These endpoints are the primary interfaces to a ",(0,o.kt)("em",{parentName:"p"},"running")," Bee node. API-endpoints can be queried using familiar HTTP requests, and will respond with a semantically accurate ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"},"HTTP status and error codes")," as well as data payloads in ",(0,o.kt)("a",{parentName:"p",href:"https://www.json.org/json-en.html"},"JSON")," format where appropriate."),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("p",null,"The API-endpoint exposes all functionality to upload and download content to and from the Swarm network. By default, it runs on port ",(0,o.kt)("inlineCode",{parentName:"p"},":1633"),"."),(0,o.kt)("p",null,"Detailed information about Bee API endpoint can be found here:"),(0,o.kt)("h3",{id:"api-reference"},(0,o.kt)("a",{parentName:"h3",href:"/api/"},"API Reference")),(0,o.kt)("h2",{id:"debug-api"},"Debug API"),(0,o.kt)("p",null,"The Debug API is disabled by default but can be enabled by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"debug-api-enable")," configuration option to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),". The Debug API exposes functionality to inspect the state of your Bee node while it is running, as well as some other features that should not be exposed to the public Internet. The Debug API runs on port ",(0,o.kt)("inlineCode",{parentName:"p"},":1635")," by default."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For a new installation of Bee, the Debug API endpoint is not yet\nexposed for security reasons. To enable the Debug API endpoints, set\n",(0,o.kt)("inlineCode",{parentName:"p"},"--debug-api-enable")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," in your ",(0,o.kt)("a",{parentName:"p",href:"/docs/bee/working-with-bee/configuration"},"configuration\nfile")," and restart your Bee.")),(0,o.kt)("h3",{id:"debug-api-reference"},(0,o.kt)("a",{parentName:"h3",href:"/debug-api/"},"Debug API Reference")),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Your Debug API should not be exposed to the public Internet, make sure that your network has a firewall which blocks port ",(0,o.kt)("inlineCode",{parentName:"p"},"1635"),", or bind the Debug API to ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost"))))}b.isMDXComponent=!0}}]);